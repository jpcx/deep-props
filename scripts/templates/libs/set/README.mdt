# [deep-props](https://github.com/jpcx/deep-props/blob/master/README.md).set

[![NPM](https://nodei.co/npm/deep-props.set.png)](https://nodei.co/npm/deep-props.set/)

___{alias:deep-props.set/description}___

See the [usage examples](#usage) for an overview of different types of data structures.

## Getting Started

The following installation, testing, and deployment instructions assume that deep-props.set will be installed as a standalone module. For instructions on how to install and test all deep-props modules, please [refer to the main README](https://github.com/jpcx/deep-props/blob/master/README.md). Functionality of the module remains the same in both cases.

### Prerequisites

Node.JS version ___{alias:deep-props.set/node}___ or above.

### Installing

```console
npm install deep-props.set
```

### Testing

The following command will test the package for errors. It prints a selection of examples to the console; scroll through its output if you want to learn more about the utility.

```console
npm test --prefix /path/to/node_modules/deep-props.set
```

### Deployment

```js
const set = require('deep-props.set')
```

<a name="usage"></a>

### Usage

***Note:*** For string paths using standard settings, '.' is considered the same as '[' and ']'. See [<code>Options</code>](https://github.com/jpcx/deep-props.set/blob/___{alias:deep-props.set/tag}___/docs/global.md#~Options) for instructions for customizing this behavior.

**Setting within existing Object structure**
```js
const nest = { foo: { bar: { baz: 'beh' } } }

// Both return: { foo: { bar: { baz: 'qux' } } }
set(nest, 'foo.bar.baz', 'qux')
nest
```

**Setting within existing Array structure**
```js
const nest = [[['foo']]]

// Both return: [[['bar']]]
set(nest, '0.0.0', 'bar')
nest
```

**Setting within existing Map structure**
```js
const nest = new Map().set(
  'foo', new Map().set(
    'bar', new Map().set(
      'baz', 'beh'
    )
  )
)

// Both return: Map { 'foo' => Map { 'bar' => Map { 'baz' => 'qux' } } }
set(nest, 'foo.bar.baz', 'qux')
nest
```

**Setting within existing Set structure**
```js
const nest = new Set([
  new Set([
    new Set([
      'foo'
    ])
  ])
])

// Both return: Set { Set { Set { 'bar' } } }
set(nest, '0.0.0', 'bar')
nest

// Both return: Set { Set { Set { 'bar', 'baz' } } }
set(nest, '0.0.1', 'baz')
nest
```

**Creation of new Object structure**
```js
const nest = {}

// Both return: { foo: { bar: { baz: 'qux' } } }
set(nest, 'foo.bar.baz', 'qux')
nest
```

**Creation of new Array structure**
```js
const nest = []

// Both return: [[['foo']]]
set(nest, '0.0.0', 'foo')
nest
```

**Creation of new Map structure**
```js
const nest = new Map()

// Both return: Map { ['foo'] => Map { ['bar'] => Map { ['baz'] => 'beh' } } }
set(nest, [['foo'], ['bar'], ['baz']], 'beh')
nest
```

## Documentation

### See:
  + [API Docs](https://github.com/jpcx/deep-props.set/blob/___{alias:deep-props.set/tag}___/docs/API.md)
  + [Global Docs](https://github.com/jpcx/deep-props.set/blob/___{alias:deep-props.set/tag}___/docs/global.md)

### Module: set

___{file:libs/set/docs/API.md___split-gm:Module: set$\n===========$\n\n([\s\S]+?)#### Examples$}___

## Versioning

Versioned using [SemVer](http://semver.org/). For available versions, see the [Changelog](https://github.com/jpcx/deep-props.set/blob/___{alias:deep-props.set/tag}___/CHANGELOG.md).

## Contribution

Please raise an issue if you find any. Pull requests are welcome!

## Author

  + **Justin Collier** - [jpcx](https://github.com/jpcx)

## License

This project is licensed under the MIT License - see the [LICENSE](https://github.com/jpcx/deep-props.set/blob/___{alias:deep-props.set/tag}___/LICENSE) file for details
